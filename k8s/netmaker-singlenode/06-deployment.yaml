---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netmaker
  namespace: netmaker
  labels:
    app: netmaker
spec:
  selector:
    matchLabels:
      app: netmaker
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: netmaker
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args: ["sysctl -w net.ipv4.ip_forward=1 && sysctl -w net.ipv4.conf.all.src_valid_mark=1 && sysctl -w net.ipv6.conf.all.disable_ipv6=0 && sysctl -w net.ipv6.conf.all.forwarding=1"]
        securityContext:
          privileged: true
      dnsPolicy: ClusterFirstWithHostNet
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - netmaker
            topologyKey: "kubernetes.io/hostname"
      containers:
      - env:
        - name: SERVER_NAME
          value: broker.BASE_DOMAIN
        - name: SERVER_API_CONN_STRING
          value: api.BASE_DOMAIN:443
        - name: SERVER_HTTP_HOST
          value: api.BASE_DOMAIN
        - name: API_PORT
          value: "8081"
        - name: WG_QUICK_USERSPACE_IMPLEMENTATION
          value: wireguard-go
        - name: DNS_MODE
          value: "off"
        - name: CLIENT_MODE
          value: "on"
        - name: DISPLAY_KEYS
          value: "on"
        - name: DATABASE
          value: sqlite
        - name: MASTER_KEY
          value: REPLACE_MASTER_KEY
        - name: PLATFORM
          value: Kubernetes
        - name: CORS_ALLOWED_ORIGIN
          value: '*'
        - name: MQ_HOST
          value: "127.0.0.1"          
#        Uncomment this section if using the Nginx config
#        - name: MQ_PORT
#          value: "31883"
        - name: PLATFORM
          value: "Kubernetes"
        - name: VERBOSITY
          value: "3"
        image: gravitl/netmaker:v0.14.3
        imagePullPolicy: Always
        name: netmaker
        ports:
        - containerPort: 8081
          protocol: TCP
        - containerPort: 31821
          protocol: UDP
        - containerPort: 31822
          protocol: UDP
        - containerPort: 31823
          protocol: UDP
        - containerPort: 31824
          protocol: UDP
        - containerPort: 31825
          protocol: d
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            - SYS_MODULE
        volumeMounts:
        - mountPath: /etc/netmaker/
          name: shared-certs
        - mountPath: /root/data
          name: netmaker-data
      - name: netmaker-ui
        image: gravitl/netmaker-ui:v0.14.3
        ports:
        - containerPort: 80
        env:
        - name: BACKEND_URL
          value: "https://api.netmaker.NETMAKER_BASE_DOMAIN"
      - image: eclipse-mosquitto:2.0.11-openssl
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8883
          timeoutSeconds: 1
        name: mosquitto
        ports:
        - containerPort: 1883        
          name: mqtt
          protocol: TCP
        - containerPort: 8883        
          name: mqtt2
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8883
          timeoutSeconds: 1
        resources: {}
        startupProbe:
          failureThreshold: 30
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 8883
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /mosquitto/config/mosquitto.conf
          name: mosquitto-config
          subPath: mosquitto.conf
        - mountPath: /mosquitto/certs
          name: shared-certs
      volumes:
      - name: nm-sqldata
        persistentVolumeClaim:
          claimName: nm-pvc-sqldata
      - name: netmaker-mq-configmap
        configMap:
          name: netmaker-mq-configmap